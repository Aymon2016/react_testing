

react testing library link
    https://testing-library.com/docs/react-testing-library/cheatsheet

jest dom link
    https://github.com/testing-library/jest-dom

How to test component
    1.create a test file as button.test.js 
    2.import method as  import { render, screen } from '@testing-library/react';
    3.import button component as import App from './App';
    4.write test code as 
                        test('button has correct initial color', () => {
                            render(<App />)
                            const button = screen.getByRole('button', { name: /blue/i });
                            expect(button).toHaveStyle('background-color:red')
                        });
    5.read doc file
    6.this is first react component test code 

        import { render, screen, fireEvent } from '@testing-library/react';
        import App from './App';

        describe('red-blue button', () => {
        test('button has correct initial color', () => {
            render(<App />)
            const button = screen.getByRole('button', { name: /blue/i });
            expect(button).toHaveStyle('background-color:red')
        });

        test('button has correct initial text', () => {
            render(<App />)
            const button = screen.getByRole('button', { name: /blue/i });
            expect(button).toHaveTextContent('color is blue')
        });

        test('button turns blue when clicked', () => {
            render(<App />)
            const button = screen.getByRole('button', { name: /blue/i });
            fireEvent.click(button)
            expect(button).toHaveStyle('background-color:blue')
        });

        test('button text changed when clicked', () => {
            render(<App />)
            const button = screen.getByRole('button', { name: /blue/i });
            fireEvent.click(button)
            expect(button).toHaveTextContent('color is red blue')
        });
        })